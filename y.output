   0  $accept : prog $end

   1  prog : lclasse
   2       |

   3  lclasse : classe lclasse
   4          |

   5  classe : CLASS ID '{' corpoclasse '}'

   6  corpoclasse : PRIVATE ':' latri PUBLIC ':' lmet

   7  latri : atri latri
   8        |

   9  atri : tipo ID lid ';'

  10  lid : ',' ID
  11      |

  12  lmet : met lmet
  13       |

  14  met : metconst
  15      | metmain
  16      | metnormal

  17  metconst : ID '(' lparam ')' latri '{' corpomet '}'

  18  metmain : VOID MAIN '(' ')' latri '{' corpomet '}'

  19  metnormal : tipo ID '(' lparam ')' latri '{' corpomet return '}'

  20  metvoid : VOID ID '(' lparam ')' latri '{' corpomet '}'

  21  lparam : param sublparam
  22         |

  23  param : tipo ID

  24  sublparam : ',' param sublparam
  25            |

  26  return : RETURN exp ';'

  27  exp : exp '+' exp
  28      | exp '>' exp
  29      | exp AND exp
  30      | NUM
  31      | '(' exp ')'
  32      | ID
  33      | exp '=' exp
  34      | exp '[' exp ']'
  35      | exp ob exp
  36      | TRUE
  37      | FALSE
  38      | ID INCREMENT
  39      | ID DECREMENT
  40      | '(' exp ')'
  41      | NUM
  42      | NUMDOUBLE
  43      | LIT
  44      | chamaMetodo
  45      | NEW ID '(' lparam ')'
  46      | ID

  47  ob : '+'
  48     | '*'
  49     | '-'
  50     | '/'
  51     | '>'
  52     | '<'
  53     | AND
  54     | OR
  55     | LEQ
  56     | GEQ
  57     | EQ
  58     | NEQ

  59  corpomet : lcmd

  60  lcmd : cmd lcmd
  61       |

  62  cmd : atrib
  63      | escrita
  64      | leia
  65      | if
  66      | while
  67      | for
  68      |

  69  atrib : ID '=' exp ';'

  70  escrita : ESCREVA LIT contescrita ';'

  71  contescrita : ',' exp
  72              |

  73  leia : LEIA ID ';'

  74  if : IF exp ':' lcmd else endif

  75  else : ELSE ':' lcmd
  76       |

  77  endif : ENDIF

  78  lcmdloop : cmd lcmdloop
  79           | BREAK
  80           |

  81  while : WHILE exp ':' lcmdloop endwhile

  82  endwhile : ENDWHILE

  83  for : FOR ID '=' exp ';' exp ';' exp ':' lcmdloop endfor

  84  endfor : ENDFOR

  85  chamaMetodo : ID '.' ID '(' lparam ')'

  86  tipo : INT
  87       | DOUBLE
  88       | STRING
  89       | BOOLEAN
  90       | ID

0: reduce/reduce conflict (reduce 2, reduce 4) on $end
state 0
	$accept : . prog $end  (0)
	prog : .  (2)
	lclasse : .  (4)

	CLASS  shift 1
	$end  reduce 2

	prog  goto 2
	lclasse  goto 3
	classe  goto 4


state 1
	classe : CLASS . ID '{' corpoclasse '}'  (5)

	ID  shift 5
	.  error


state 2
	$accept : prog . $end  (0)

	$end  accept


state 3
	prog : lclasse .  (1)

	.  reduce 1


state 4
	lclasse : classe . lclasse  (3)
	lclasse : .  (4)

	CLASS  shift 1
	$end  reduce 4

	lclasse  goto 6
	classe  goto 4


state 5
	classe : CLASS ID . '{' corpoclasse '}'  (5)

	'{'  shift 7
	.  error


state 6
	lclasse : classe lclasse .  (3)

	.  reduce 3


state 7
	classe : CLASS ID '{' . corpoclasse '}'  (5)

	PRIVATE  shift 8
	.  error

	corpoclasse  goto 9


state 8
	corpoclasse : PRIVATE . ':' latri PUBLIC ':' lmet  (6)

	':'  shift 10
	.  error


state 9
	classe : CLASS ID '{' corpoclasse . '}'  (5)

	'}'  shift 11
	.  error


state 10
	corpoclasse : PRIVATE ':' . latri PUBLIC ':' lmet  (6)
	latri : .  (8)

	ID  shift 12
	INT  shift 13
	DOUBLE  shift 14
	STRING  shift 15
	BOOLEAN  shift 16
	PUBLIC  reduce 8

	tipo  goto 17
	latri  goto 18
	atri  goto 19


state 11
	classe : CLASS ID '{' corpoclasse '}' .  (5)

	.  reduce 5


state 12
	tipo : ID .  (90)

	.  reduce 90


state 13
	tipo : INT .  (86)

	.  reduce 86


state 14
	tipo : DOUBLE .  (87)

	.  reduce 87


state 15
	tipo : STRING .  (88)

	.  reduce 88


state 16
	tipo : BOOLEAN .  (89)

	.  reduce 89


state 17
	atri : tipo . ID lid ';'  (9)

	ID  shift 20
	.  error


state 18
	corpoclasse : PRIVATE ':' latri . PUBLIC ':' lmet  (6)

	PUBLIC  shift 21
	.  error


state 19
	latri : atri . latri  (7)
	latri : .  (8)

	ID  shift 12
	INT  shift 13
	DOUBLE  shift 14
	STRING  shift 15
	BOOLEAN  shift 16
	'{'  reduce 8
	PUBLIC  reduce 8

	tipo  goto 17
	latri  goto 22
	atri  goto 19


state 20
	atri : tipo ID . lid ';'  (9)
	lid : .  (11)

	','  shift 23
	';'  reduce 11

	lid  goto 24


state 21
	corpoclasse : PRIVATE ':' latri PUBLIC . ':' lmet  (6)

	':'  shift 25
	.  error


state 22
	latri : atri latri .  (7)

	.  reduce 7


state 23
	lid : ',' . ID  (10)

	ID  shift 26
	.  error


state 24
	atri : tipo ID lid . ';'  (9)

	';'  shift 27
	.  error


state 25
	corpoclasse : PRIVATE ':' latri PUBLIC ':' . lmet  (6)
	lmet : .  (13)

	ID  shift 28
	INT  shift 13
	VOID  shift 29
	DOUBLE  shift 14
	STRING  shift 15
	BOOLEAN  shift 16
	'}'  reduce 13

	tipo  goto 30
	lmet  goto 31
	met  goto 32
	metconst  goto 33
	metmain  goto 34
	metnormal  goto 35


state 26
	lid : ',' ID .  (10)

	.  reduce 10


state 27
	atri : tipo ID lid ';' .  (9)

	.  reduce 9


state 28
	metconst : ID . '(' lparam ')' latri '{' corpomet '}'  (17)
	tipo : ID .  (90)

	'('  shift 36
	ID  reduce 90


state 29
	metmain : VOID . MAIN '(' ')' latri '{' corpomet '}'  (18)

	MAIN  shift 37
	.  error


state 30
	metnormal : tipo . ID '(' lparam ')' latri '{' corpomet return '}'  (19)

	ID  shift 38
	.  error


state 31
	corpoclasse : PRIVATE ':' latri PUBLIC ':' lmet .  (6)

	.  reduce 6


state 32
	lmet : met . lmet  (12)
	lmet : .  (13)

	ID  shift 28
	INT  shift 13
	VOID  shift 29
	DOUBLE  shift 14
	STRING  shift 15
	BOOLEAN  shift 16
	'}'  reduce 13

	tipo  goto 30
	lmet  goto 39
	met  goto 32
	metconst  goto 33
	metmain  goto 34
	metnormal  goto 35


state 33
	met : metconst .  (14)

	.  reduce 14


state 34
	met : metmain .  (15)

	.  reduce 15


state 35
	met : metnormal .  (16)

	.  reduce 16


state 36
	metconst : ID '(' . lparam ')' latri '{' corpomet '}'  (17)
	lparam : .  (22)

	ID  shift 12
	INT  shift 13
	DOUBLE  shift 14
	STRING  shift 15
	BOOLEAN  shift 16
	')'  reduce 22

	tipo  goto 40
	lparam  goto 41
	param  goto 42


state 37
	metmain : VOID MAIN . '(' ')' latri '{' corpomet '}'  (18)

	'('  shift 43
	.  error


state 38
	metnormal : tipo ID . '(' lparam ')' latri '{' corpomet return '}'  (19)

	'('  shift 44
	.  error


state 39
	lmet : met lmet .  (12)

	.  reduce 12


state 40
	param : tipo . ID  (23)

	ID  shift 45
	.  error


state 41
	metconst : ID '(' lparam . ')' latri '{' corpomet '}'  (17)

	')'  shift 46
	.  error


state 42
	lparam : param . sublparam  (21)
	sublparam : .  (25)

	','  shift 47
	')'  reduce 25

	sublparam  goto 48


state 43
	metmain : VOID MAIN '(' . ')' latri '{' corpomet '}'  (18)

	')'  shift 49
	.  error


state 44
	metnormal : tipo ID '(' . lparam ')' latri '{' corpomet return '}'  (19)
	lparam : .  (22)

	ID  shift 12
	INT  shift 13
	DOUBLE  shift 14
	STRING  shift 15
	BOOLEAN  shift 16
	')'  reduce 22

	tipo  goto 40
	lparam  goto 50
	param  goto 42


state 45
	param : tipo ID .  (23)

	.  reduce 23


state 46
	metconst : ID '(' lparam ')' . latri '{' corpomet '}'  (17)
	latri : .  (8)

	ID  shift 12
	INT  shift 13
	DOUBLE  shift 14
	STRING  shift 15
	BOOLEAN  shift 16
	'{'  reduce 8

	tipo  goto 17
	latri  goto 51
	atri  goto 19


state 47
	sublparam : ',' . param sublparam  (24)

	ID  shift 12
	INT  shift 13
	DOUBLE  shift 14
	STRING  shift 15
	BOOLEAN  shift 16
	.  error

	tipo  goto 40
	param  goto 52


state 48
	lparam : param sublparam .  (21)

	.  reduce 21


state 49
	metmain : VOID MAIN '(' ')' . latri '{' corpomet '}'  (18)
	latri : .  (8)

	ID  shift 12
	INT  shift 13
	DOUBLE  shift 14
	STRING  shift 15
	BOOLEAN  shift 16
	'{'  reduce 8

	tipo  goto 17
	latri  goto 53
	atri  goto 19


state 50
	metnormal : tipo ID '(' lparam . ')' latri '{' corpomet return '}'  (19)

	')'  shift 54
	.  error


state 51
	metconst : ID '(' lparam ')' latri . '{' corpomet '}'  (17)

	'{'  shift 55
	.  error


state 52
	sublparam : ',' param . sublparam  (24)
	sublparam : .  (25)

	','  shift 47
	')'  reduce 25

	sublparam  goto 56


state 53
	metmain : VOID MAIN '(' ')' latri . '{' corpomet '}'  (18)

	'{'  shift 57
	.  error


state 54
	metnormal : tipo ID '(' lparam ')' . latri '{' corpomet return '}'  (19)
	latri : .  (8)

	ID  shift 12
	INT  shift 13
	DOUBLE  shift 14
	STRING  shift 15
	BOOLEAN  shift 16
	'{'  reduce 8

	tipo  goto 17
	latri  goto 58
	atri  goto 19


55: shift/reduce conflict (shift 59, reduce 68) on ID
55: shift/reduce conflict (shift 60, reduce 68) on IF
55: shift/reduce conflict (shift 61, reduce 68) on WHILE
55: reduce/reduce conflict (reduce 61, reduce 68) on '}'
55: shift/reduce conflict (shift 62, reduce 68) on ESCREVA
55: shift/reduce conflict (shift 63, reduce 68) on LEIA
55: shift/reduce conflict (shift 64, reduce 68) on FOR
state 55
	metconst : ID '(' lparam ')' latri '{' . corpomet '}'  (17)
	lcmd : .  (61)
	cmd : .  (68)

	ID  shift 59
	IF  shift 60
	WHILE  shift 61
	ESCREVA  shift 62
	LEIA  shift 63
	FOR  shift 64
	'}'  reduce 61

	corpomet  goto 65
	lcmd  goto 66
	cmd  goto 67
	atrib  goto 68
	escrita  goto 69
	leia  goto 70
	if  goto 71
	while  goto 72
	for  goto 73


state 56
	sublparam : ',' param sublparam .  (24)

	.  reduce 24


57: shift/reduce conflict (shift 59, reduce 68) on ID
57: shift/reduce conflict (shift 60, reduce 68) on IF
57: shift/reduce conflict (shift 61, reduce 68) on WHILE
57: reduce/reduce conflict (reduce 61, reduce 68) on '}'
57: shift/reduce conflict (shift 62, reduce 68) on ESCREVA
57: shift/reduce conflict (shift 63, reduce 68) on LEIA
57: shift/reduce conflict (shift 64, reduce 68) on FOR
state 57
	metmain : VOID MAIN '(' ')' latri '{' . corpomet '}'  (18)
	lcmd : .  (61)
	cmd : .  (68)

	ID  shift 59
	IF  shift 60
	WHILE  shift 61
	ESCREVA  shift 62
	LEIA  shift 63
	FOR  shift 64
	'}'  reduce 61

	corpomet  goto 74
	lcmd  goto 66
	cmd  goto 67
	atrib  goto 68
	escrita  goto 69
	leia  goto 70
	if  goto 71
	while  goto 72
	for  goto 73


state 58
	metnormal : tipo ID '(' lparam ')' latri . '{' corpomet return '}'  (19)

	'{'  shift 75
	.  error


state 59
	atrib : ID . '=' exp ';'  (69)

	'='  shift 76
	.  error


state 60
	if : IF . exp ':' lcmd else endif  (74)

	ID  shift 77
	NUM  shift 78
	LIT  shift 79
	TRUE  shift 80
	FALSE  shift 81
	'('  shift 82
	NUMDOUBLE  shift 83
	NEW  shift 84
	.  error

	exp  goto 85
	chamaMetodo  goto 86


state 61
	while : WHILE . exp ':' lcmdloop endwhile  (81)

	ID  shift 77
	NUM  shift 78
	LIT  shift 79
	TRUE  shift 80
	FALSE  shift 81
	'('  shift 82
	NUMDOUBLE  shift 83
	NEW  shift 84
	.  error

	exp  goto 87
	chamaMetodo  goto 86


state 62
	escrita : ESCREVA . LIT contescrita ';'  (70)

	LIT  shift 88
	.  error


state 63
	leia : LEIA . ID ';'  (73)

	ID  shift 89
	.  error


state 64
	for : FOR . ID '=' exp ';' exp ';' exp ':' lcmdloop endfor  (83)

	ID  shift 90
	.  error


state 65
	metconst : ID '(' lparam ')' latri '{' corpomet . '}'  (17)

	'}'  shift 91
	.  error


state 66
	corpomet : lcmd .  (59)

	.  reduce 59


67: shift/reduce conflict (shift 59, reduce 68) on ID
67: shift/reduce conflict (shift 60, reduce 68) on IF
67: reduce/reduce conflict (reduce 61, reduce 68) on ELSE
67: shift/reduce conflict (shift 61, reduce 68) on WHILE
67: reduce/reduce conflict (reduce 61, reduce 68) on '}'
67: reduce/reduce conflict (reduce 61, reduce 68) on RETURN
67: shift/reduce conflict (shift 62, reduce 68) on ESCREVA
67: shift/reduce conflict (shift 63, reduce 68) on LEIA
67: reduce/reduce conflict (reduce 61, reduce 68) on ENDIF
67: shift/reduce conflict (shift 64, reduce 68) on FOR
state 67
	lcmd : cmd . lcmd  (60)
	lcmd : .  (61)
	cmd : .  (68)

	ID  shift 59
	IF  shift 60
	WHILE  shift 61
	ESCREVA  shift 62
	LEIA  shift 63
	FOR  shift 64
	ELSE  reduce 61
	'}'  reduce 61
	RETURN  reduce 61
	ENDIF  reduce 61

	lcmd  goto 92
	cmd  goto 67
	atrib  goto 68
	escrita  goto 69
	leia  goto 70
	if  goto 71
	while  goto 72
	for  goto 73


state 68
	cmd : atrib .  (62)

	.  reduce 62


state 69
	cmd : escrita .  (63)

	.  reduce 63


state 70
	cmd : leia .  (64)

	.  reduce 64


state 71
	cmd : if .  (65)

	.  reduce 65


state 72
	cmd : while .  (66)

	.  reduce 66


state 73
	cmd : for .  (67)

	.  reduce 67


state 74
	metmain : VOID MAIN '(' ')' latri '{' corpomet . '}'  (18)

	'}'  shift 93
	.  error


75: shift/reduce conflict (shift 59, reduce 68) on ID
75: shift/reduce conflict (shift 60, reduce 68) on IF
75: shift/reduce conflict (shift 61, reduce 68) on WHILE
75: reduce/reduce conflict (reduce 61, reduce 68) on RETURN
75: shift/reduce conflict (shift 62, reduce 68) on ESCREVA
75: shift/reduce conflict (shift 63, reduce 68) on LEIA
75: shift/reduce conflict (shift 64, reduce 68) on FOR
state 75
	metnormal : tipo ID '(' lparam ')' latri '{' . corpomet return '}'  (19)
	lcmd : .  (61)
	cmd : .  (68)

	ID  shift 59
	IF  shift 60
	WHILE  shift 61
	ESCREVA  shift 62
	LEIA  shift 63
	FOR  shift 64
	RETURN  reduce 61

	corpomet  goto 94
	lcmd  goto 66
	cmd  goto 67
	atrib  goto 68
	escrita  goto 69
	leia  goto 70
	if  goto 71
	while  goto 72
	for  goto 73


state 76
	atrib : ID '=' . exp ';'  (69)

	ID  shift 77
	NUM  shift 78
	LIT  shift 79
	TRUE  shift 80
	FALSE  shift 81
	'('  shift 82
	NUMDOUBLE  shift 83
	NEW  shift 84
	.  error

	exp  goto 95
	chamaMetodo  goto 86


77: reduce/reduce conflict (reduce 32, reduce 46) on EQ
77: reduce/reduce conflict (reduce 32, reduce 46) on LEQ
77: reduce/reduce conflict (reduce 32, reduce 46) on GEQ
77: reduce/reduce conflict (reduce 32, reduce 46) on NEQ
77: reduce/reduce conflict (reduce 32, reduce 46) on AND
77: reduce/reduce conflict (reduce 32, reduce 46) on OR
77: reduce/reduce conflict (reduce 32, reduce 46) on '='
77: reduce/reduce conflict (reduce 32, reduce 46) on '>'
77: reduce/reduce conflict (reduce 32, reduce 46) on '<'
77: reduce/reduce conflict (reduce 32, reduce 46) on '+'
77: reduce/reduce conflict (reduce 32, reduce 46) on '-'
77: reduce/reduce conflict (reduce 32, reduce 46) on '*'
77: reduce/reduce conflict (reduce 32, reduce 46) on '/'
77: reduce/reduce conflict (reduce 32, reduce 46) on ':'
77: reduce/reduce conflict (reduce 32, reduce 46) on ';'
77: reduce/reduce conflict (reduce 32, reduce 46) on ')'
77: reduce/reduce conflict (reduce 32, reduce 46) on '['
77: reduce/reduce conflict (reduce 32, reduce 46) on ']'
state 77
	exp : ID .  (32)
	exp : ID . INCREMENT  (38)
	exp : ID . DECREMENT  (39)
	exp : ID .  (46)
	chamaMetodo : ID . '.' ID '(' lparam ')'  (85)

	INCREMENT  shift 96
	DECREMENT  shift 97
	'.'  shift 98
	EQ  reduce 32
	LEQ  reduce 32
	GEQ  reduce 32
	NEQ  reduce 32
	AND  reduce 32
	OR  reduce 32
	'='  reduce 32
	'>'  reduce 32
	'<'  reduce 32
	'+'  reduce 32
	'-'  reduce 32
	'*'  reduce 32
	'/'  reduce 32
	':'  reduce 32
	';'  reduce 32
	')'  reduce 32
	'['  reduce 32
	']'  reduce 32


78: reduce/reduce conflict (reduce 30, reduce 41) on EQ
78: reduce/reduce conflict (reduce 30, reduce 41) on LEQ
78: reduce/reduce conflict (reduce 30, reduce 41) on GEQ
78: reduce/reduce conflict (reduce 30, reduce 41) on NEQ
78: reduce/reduce conflict (reduce 30, reduce 41) on AND
78: reduce/reduce conflict (reduce 30, reduce 41) on OR
78: reduce/reduce conflict (reduce 30, reduce 41) on '='
78: reduce/reduce conflict (reduce 30, reduce 41) on '>'
78: reduce/reduce conflict (reduce 30, reduce 41) on '<'
78: reduce/reduce conflict (reduce 30, reduce 41) on '+'
78: reduce/reduce conflict (reduce 30, reduce 41) on '-'
78: reduce/reduce conflict (reduce 30, reduce 41) on '*'
78: reduce/reduce conflict (reduce 30, reduce 41) on '/'
78: reduce/reduce conflict (reduce 30, reduce 41) on ':'
78: reduce/reduce conflict (reduce 30, reduce 41) on ';'
78: reduce/reduce conflict (reduce 30, reduce 41) on ')'
78: reduce/reduce conflict (reduce 30, reduce 41) on '['
78: reduce/reduce conflict (reduce 30, reduce 41) on ']'
state 78
	exp : NUM .  (30)
	exp : NUM .  (41)

	.  reduce 30


state 79
	exp : LIT .  (43)

	.  reduce 43


state 80
	exp : TRUE .  (36)

	.  reduce 36


state 81
	exp : FALSE .  (37)

	.  reduce 37


state 82
	exp : '(' . exp ')'  (31)
	exp : '(' . exp ')'  (40)

	ID  shift 77
	NUM  shift 78
	LIT  shift 79
	TRUE  shift 80
	FALSE  shift 81
	'('  shift 82
	NUMDOUBLE  shift 83
	NEW  shift 84
	.  error

	exp  goto 99
	chamaMetodo  goto 86


state 83
	exp : NUMDOUBLE .  (42)

	.  reduce 42


state 84
	exp : NEW . ID '(' lparam ')'  (45)

	ID  shift 100
	.  error


state 85
	exp : exp . '+' exp  (27)
	exp : exp . '>' exp  (28)
	exp : exp . AND exp  (29)
	exp : exp . '=' exp  (33)
	exp : exp . '[' exp ']'  (34)
	exp : exp . ob exp  (35)
	if : IF exp . ':' lcmd else endif  (74)

	EQ  shift 101
	LEQ  shift 102
	GEQ  shift 103
	NEQ  shift 104
	AND  shift 105
	OR  shift 106
	'='  shift 107
	'>'  shift 108
	'<'  shift 109
	'+'  shift 110
	'-'  shift 111
	'*'  shift 112
	'/'  shift 113
	':'  shift 114
	'['  shift 115
	.  error

	ob  goto 116


state 86
	exp : chamaMetodo .  (44)

	.  reduce 44


state 87
	exp : exp . '+' exp  (27)
	exp : exp . '>' exp  (28)
	exp : exp . AND exp  (29)
	exp : exp . '=' exp  (33)
	exp : exp . '[' exp ']'  (34)
	exp : exp . ob exp  (35)
	while : WHILE exp . ':' lcmdloop endwhile  (81)

	EQ  shift 101
	LEQ  shift 102
	GEQ  shift 103
	NEQ  shift 104
	AND  shift 105
	OR  shift 106
	'='  shift 107
	'>'  shift 108
	'<'  shift 109
	'+'  shift 110
	'-'  shift 111
	'*'  shift 112
	'/'  shift 113
	':'  shift 117
	'['  shift 115
	.  error

	ob  goto 116


state 88
	escrita : ESCREVA LIT . contescrita ';'  (70)
	contescrita : .  (72)

	','  shift 118
	';'  reduce 72

	contescrita  goto 119


state 89
	leia : LEIA ID . ';'  (73)

	';'  shift 120
	.  error


state 90
	for : FOR ID . '=' exp ';' exp ';' exp ':' lcmdloop endfor  (83)

	'='  shift 121
	.  error


state 91
	metconst : ID '(' lparam ')' latri '{' corpomet '}' .  (17)

	.  reduce 17


state 92
	lcmd : cmd lcmd .  (60)

	.  reduce 60


state 93
	metmain : VOID MAIN '(' ')' latri '{' corpomet '}' .  (18)

	.  reduce 18


state 94
	metnormal : tipo ID '(' lparam ')' latri '{' corpomet . return '}'  (19)

	RETURN  shift 122
	.  error

	return  goto 123


state 95
	exp : exp . '+' exp  (27)
	exp : exp . '>' exp  (28)
	exp : exp . AND exp  (29)
	exp : exp . '=' exp  (33)
	exp : exp . '[' exp ']'  (34)
	exp : exp . ob exp  (35)
	atrib : ID '=' exp . ';'  (69)

	EQ  shift 101
	LEQ  shift 102
	GEQ  shift 103
	NEQ  shift 104
	AND  shift 105
	OR  shift 106
	'='  shift 107
	'>'  shift 108
	'<'  shift 109
	'+'  shift 110
	'-'  shift 111
	'*'  shift 112
	'/'  shift 113
	';'  shift 124
	'['  shift 115
	.  error

	ob  goto 116


state 96
	exp : ID INCREMENT .  (38)

	.  reduce 38


state 97
	exp : ID DECREMENT .  (39)

	.  reduce 39


state 98
	chamaMetodo : ID '.' . ID '(' lparam ')'  (85)

	ID  shift 125
	.  error


state 99
	exp : exp . '+' exp  (27)
	exp : exp . '>' exp  (28)
	exp : exp . AND exp  (29)
	exp : '(' exp . ')'  (31)
	exp : exp . '=' exp  (33)
	exp : exp . '[' exp ']'  (34)
	exp : exp . ob exp  (35)
	exp : '(' exp . ')'  (40)

	EQ  shift 101
	LEQ  shift 102
	GEQ  shift 103
	NEQ  shift 104
	AND  shift 105
	OR  shift 106
	'='  shift 107
	'>'  shift 108
	'<'  shift 109
	'+'  shift 110
	'-'  shift 111
	'*'  shift 112
	'/'  shift 113
	')'  shift 126
	'['  shift 115
	.  error

	ob  goto 116


state 100
	exp : NEW ID . '(' lparam ')'  (45)

	'('  shift 127
	.  error


state 101
	ob : EQ .  (57)

	.  reduce 57


state 102
	ob : LEQ .  (55)

	.  reduce 55


state 103
	ob : GEQ .  (56)

	.  reduce 56


state 104
	ob : NEQ .  (58)

	.  reduce 58


105: shift/reduce conflict (shift 77, reduce 53) on ID
105: shift/reduce conflict (shift 78, reduce 53) on NUM
105: shift/reduce conflict (shift 79, reduce 53) on LIT
105: shift/reduce conflict (shift 80, reduce 53) on TRUE
105: shift/reduce conflict (shift 81, reduce 53) on FALSE
105: shift/reduce conflict (shift 82, reduce 53) on '('
105: shift/reduce conflict (shift 83, reduce 53) on NUMDOUBLE
105: shift/reduce conflict (shift 84, reduce 53) on NEW
state 105
	exp : exp AND . exp  (29)
	ob : AND .  (53)

	ID  shift 77
	NUM  shift 78
	LIT  shift 79
	TRUE  shift 80
	FALSE  shift 81
	'('  shift 82
	NUMDOUBLE  shift 83
	NEW  shift 84

	exp  goto 128
	chamaMetodo  goto 86


state 106
	ob : OR .  (54)

	.  reduce 54


state 107
	exp : exp '=' . exp  (33)

	ID  shift 77
	NUM  shift 78
	LIT  shift 79
	TRUE  shift 80
	FALSE  shift 81
	'('  shift 82
	NUMDOUBLE  shift 83
	NEW  shift 84
	.  error

	exp  goto 129
	chamaMetodo  goto 86


108: shift/reduce conflict (shift 77, reduce 51) on ID
108: shift/reduce conflict (shift 78, reduce 51) on NUM
108: shift/reduce conflict (shift 79, reduce 51) on LIT
108: shift/reduce conflict (shift 80, reduce 51) on TRUE
108: shift/reduce conflict (shift 81, reduce 51) on FALSE
108: shift/reduce conflict (shift 82, reduce 51) on '('
108: shift/reduce conflict (shift 83, reduce 51) on NUMDOUBLE
108: shift/reduce conflict (shift 84, reduce 51) on NEW
state 108
	exp : exp '>' . exp  (28)
	ob : '>' .  (51)

	ID  shift 77
	NUM  shift 78
	LIT  shift 79
	TRUE  shift 80
	FALSE  shift 81
	'('  shift 82
	NUMDOUBLE  shift 83
	NEW  shift 84

	exp  goto 130
	chamaMetodo  goto 86


state 109
	ob : '<' .  (52)

	.  reduce 52


110: shift/reduce conflict (shift 77, reduce 47) on ID
110: shift/reduce conflict (shift 78, reduce 47) on NUM
110: shift/reduce conflict (shift 79, reduce 47) on LIT
110: shift/reduce conflict (shift 80, reduce 47) on TRUE
110: shift/reduce conflict (shift 81, reduce 47) on FALSE
110: shift/reduce conflict (shift 82, reduce 47) on '('
110: shift/reduce conflict (shift 83, reduce 47) on NUMDOUBLE
110: shift/reduce conflict (shift 84, reduce 47) on NEW
state 110
	exp : exp '+' . exp  (27)
	ob : '+' .  (47)

	ID  shift 77
	NUM  shift 78
	LIT  shift 79
	TRUE  shift 80
	FALSE  shift 81
	'('  shift 82
	NUMDOUBLE  shift 83
	NEW  shift 84

	exp  goto 131
	chamaMetodo  goto 86


state 111
	ob : '-' .  (49)

	.  reduce 49


state 112
	ob : '*' .  (48)

	.  reduce 48


state 113
	ob : '/' .  (50)

	.  reduce 50


114: shift/reduce conflict (shift 59, reduce 68) on ID
114: shift/reduce conflict (shift 60, reduce 68) on IF
114: reduce/reduce conflict (reduce 61, reduce 68) on ELSE
114: shift/reduce conflict (shift 61, reduce 68) on WHILE
114: shift/reduce conflict (shift 62, reduce 68) on ESCREVA
114: shift/reduce conflict (shift 63, reduce 68) on LEIA
114: reduce/reduce conflict (reduce 61, reduce 68) on ENDIF
114: shift/reduce conflict (shift 64, reduce 68) on FOR
state 114
	if : IF exp ':' . lcmd else endif  (74)
	lcmd : .  (61)
	cmd : .  (68)

	ID  shift 59
	IF  shift 60
	WHILE  shift 61
	ESCREVA  shift 62
	LEIA  shift 63
	FOR  shift 64
	ELSE  reduce 61
	ENDIF  reduce 61

	lcmd  goto 132
	cmd  goto 67
	atrib  goto 68
	escrita  goto 69
	leia  goto 70
	if  goto 71
	while  goto 72
	for  goto 73


state 115
	exp : exp '[' . exp ']'  (34)

	ID  shift 77
	NUM  shift 78
	LIT  shift 79
	TRUE  shift 80
	FALSE  shift 81
	'('  shift 82
	NUMDOUBLE  shift 83
	NEW  shift 84
	.  error

	exp  goto 133
	chamaMetodo  goto 86


state 116
	exp : exp ob . exp  (35)

	ID  shift 77
	NUM  shift 78
	LIT  shift 79
	TRUE  shift 80
	FALSE  shift 81
	'('  shift 82
	NUMDOUBLE  shift 83
	NEW  shift 84
	.  error

	exp  goto 134
	chamaMetodo  goto 86


117: shift/reduce conflict (shift 59, reduce 68) on ID
117: shift/reduce conflict (shift 60, reduce 68) on IF
117: shift/reduce conflict (shift 61, reduce 68) on WHILE
117: shift/reduce conflict (shift 62, reduce 68) on ESCREVA
117: shift/reduce conflict (shift 63, reduce 68) on LEIA
117: shift/reduce conflict (shift 135, reduce 68) on BREAK
117: reduce/reduce conflict (reduce 68, reduce 80) on ENDWHILE
117: shift/reduce conflict (shift 64, reduce 68) on FOR
state 117
	while : WHILE exp ':' . lcmdloop endwhile  (81)
	cmd : .  (68)
	lcmdloop : .  (80)

	ID  shift 59
	IF  shift 60
	WHILE  shift 61
	ESCREVA  shift 62
	LEIA  shift 63
	BREAK  shift 135
	FOR  shift 64
	ENDWHILE  reduce 68

	cmd  goto 136
	atrib  goto 68
	escrita  goto 69
	leia  goto 70
	if  goto 71
	while  goto 72
	for  goto 73
	lcmdloop  goto 137


state 118
	contescrita : ',' . exp  (71)

	ID  shift 77
	NUM  shift 78
	LIT  shift 79
	TRUE  shift 80
	FALSE  shift 81
	'('  shift 82
	NUMDOUBLE  shift 83
	NEW  shift 84
	.  error

	exp  goto 138
	chamaMetodo  goto 86


state 119
	escrita : ESCREVA LIT contescrita . ';'  (70)

	';'  shift 139
	.  error


state 120
	leia : LEIA ID ';' .  (73)

	.  reduce 73


state 121
	for : FOR ID '=' . exp ';' exp ';' exp ':' lcmdloop endfor  (83)

	ID  shift 77
	NUM  shift 78
	LIT  shift 79
	TRUE  shift 80
	FALSE  shift 81
	'('  shift 82
	NUMDOUBLE  shift 83
	NEW  shift 84
	.  error

	exp  goto 140
	chamaMetodo  goto 86


state 122
	return : RETURN . exp ';'  (26)

	ID  shift 77
	NUM  shift 78
	LIT  shift 79
	TRUE  shift 80
	FALSE  shift 81
	'('  shift 82
	NUMDOUBLE  shift 83
	NEW  shift 84
	.  error

	exp  goto 141
	chamaMetodo  goto 86


state 123
	metnormal : tipo ID '(' lparam ')' latri '{' corpomet return . '}'  (19)

	'}'  shift 142
	.  error


state 124
	atrib : ID '=' exp ';' .  (69)

	.  reduce 69


state 125
	chamaMetodo : ID '.' ID . '(' lparam ')'  (85)

	'('  shift 143
	.  error


126: reduce/reduce conflict (reduce 31, reduce 40) on EQ
126: reduce/reduce conflict (reduce 31, reduce 40) on LEQ
126: reduce/reduce conflict (reduce 31, reduce 40) on GEQ
126: reduce/reduce conflict (reduce 31, reduce 40) on NEQ
126: reduce/reduce conflict (reduce 31, reduce 40) on AND
126: reduce/reduce conflict (reduce 31, reduce 40) on OR
126: reduce/reduce conflict (reduce 31, reduce 40) on '='
126: reduce/reduce conflict (reduce 31, reduce 40) on '>'
126: reduce/reduce conflict (reduce 31, reduce 40) on '<'
126: reduce/reduce conflict (reduce 31, reduce 40) on '+'
126: reduce/reduce conflict (reduce 31, reduce 40) on '-'
126: reduce/reduce conflict (reduce 31, reduce 40) on '*'
126: reduce/reduce conflict (reduce 31, reduce 40) on '/'
126: reduce/reduce conflict (reduce 31, reduce 40) on ':'
126: reduce/reduce conflict (reduce 31, reduce 40) on ';'
126: reduce/reduce conflict (reduce 31, reduce 40) on ')'
126: reduce/reduce conflict (reduce 31, reduce 40) on '['
126: reduce/reduce conflict (reduce 31, reduce 40) on ']'
state 126
	exp : '(' exp ')' .  (31)
	exp : '(' exp ')' .  (40)

	.  reduce 31


state 127
	exp : NEW ID '(' . lparam ')'  (45)
	lparam : .  (22)

	ID  shift 12
	INT  shift 13
	DOUBLE  shift 14
	STRING  shift 15
	BOOLEAN  shift 16
	')'  reduce 22

	tipo  goto 40
	lparam  goto 144
	param  goto 42


128: shift/reduce conflict (shift 115, reduce 29) on '['
state 128
	exp : exp . '+' exp  (27)
	exp : exp . '>' exp  (28)
	exp : exp . AND exp  (29)
	exp : exp AND exp .  (29)
	exp : exp . '=' exp  (33)
	exp : exp . '[' exp ']'  (34)
	exp : exp . ob exp  (35)

	EQ  shift 101
	LEQ  shift 102
	GEQ  shift 103
	NEQ  shift 104
	'>'  shift 108
	'<'  shift 109
	'+'  shift 110
	'-'  shift 111
	'*'  shift 112
	'/'  shift 113
	'['  shift 115
	AND  reduce 29
	OR  reduce 29
	'='  reduce 29
	':'  reduce 29
	';'  reduce 29
	')'  reduce 29
	']'  reduce 29

	ob  goto 116


129: shift/reduce conflict (shift 115, reduce 33) on '['
state 129
	exp : exp . '+' exp  (27)
	exp : exp . '>' exp  (28)
	exp : exp . AND exp  (29)
	exp : exp . '=' exp  (33)
	exp : exp '=' exp .  (33)
	exp : exp . '[' exp ']'  (34)
	exp : exp . ob exp  (35)

	EQ  shift 101
	LEQ  shift 102
	GEQ  shift 103
	NEQ  shift 104
	AND  shift 105
	OR  shift 106
	'='  shift 107
	'>'  shift 108
	'<'  shift 109
	'+'  shift 110
	'-'  shift 111
	'*'  shift 112
	'/'  shift 113
	'['  shift 115
	':'  reduce 33
	';'  reduce 33
	')'  reduce 33
	']'  reduce 33

	ob  goto 116


130: shift/reduce conflict (shift 115, reduce 28) on '['
state 130
	exp : exp . '+' exp  (27)
	exp : exp . '>' exp  (28)
	exp : exp '>' exp .  (28)
	exp : exp . AND exp  (29)
	exp : exp . '=' exp  (33)
	exp : exp . '[' exp ']'  (34)
	exp : exp . ob exp  (35)

	'+'  shift 110
	'-'  shift 111
	'*'  shift 112
	'/'  shift 113
	'['  shift 115
	EQ  reduce 28
	LEQ  reduce 28
	GEQ  reduce 28
	NEQ  reduce 28
	AND  reduce 28
	OR  reduce 28
	'='  reduce 28
	'>'  reduce 28
	'<'  reduce 28
	':'  reduce 28
	';'  reduce 28
	')'  reduce 28
	']'  reduce 28

	ob  goto 116


131: shift/reduce conflict (shift 115, reduce 27) on '['
state 131
	exp : exp . '+' exp  (27)
	exp : exp '+' exp .  (27)
	exp : exp . '>' exp  (28)
	exp : exp . AND exp  (29)
	exp : exp . '=' exp  (33)
	exp : exp . '[' exp ']'  (34)
	exp : exp . ob exp  (35)

	'*'  shift 112
	'/'  shift 113
	'['  shift 115
	EQ  reduce 27
	LEQ  reduce 27
	GEQ  reduce 27
	NEQ  reduce 27
	AND  reduce 27
	OR  reduce 27
	'='  reduce 27
	'>'  reduce 27
	'<'  reduce 27
	'+'  reduce 27
	'-'  reduce 27
	':'  reduce 27
	';'  reduce 27
	')'  reduce 27
	']'  reduce 27

	ob  goto 116


state 132
	if : IF exp ':' lcmd . else endif  (74)
	else : .  (76)

	ELSE  shift 145
	ENDIF  reduce 76

	else  goto 146


state 133
	exp : exp . '+' exp  (27)
	exp : exp . '>' exp  (28)
	exp : exp . AND exp  (29)
	exp : exp . '=' exp  (33)
	exp : exp . '[' exp ']'  (34)
	exp : exp '[' exp . ']'  (34)
	exp : exp . ob exp  (35)

	EQ  shift 101
	LEQ  shift 102
	GEQ  shift 103
	NEQ  shift 104
	AND  shift 105
	OR  shift 106
	'='  shift 107
	'>'  shift 108
	'<'  shift 109
	'+'  shift 110
	'-'  shift 111
	'*'  shift 112
	'/'  shift 113
	'['  shift 115
	']'  shift 147
	.  error

	ob  goto 116


134: shift/reduce conflict (shift 101, reduce 35) on EQ
134: shift/reduce conflict (shift 102, reduce 35) on LEQ
134: shift/reduce conflict (shift 103, reduce 35) on GEQ
134: shift/reduce conflict (shift 104, reduce 35) on NEQ
134: shift/reduce conflict (shift 105, reduce 35) on AND
134: shift/reduce conflict (shift 106, reduce 35) on OR
134: shift/reduce conflict (shift 107, reduce 35) on '='
134: shift/reduce conflict (shift 108, reduce 35) on '>'
134: shift/reduce conflict (shift 109, reduce 35) on '<'
134: shift/reduce conflict (shift 110, reduce 35) on '+'
134: shift/reduce conflict (shift 111, reduce 35) on '-'
134: shift/reduce conflict (shift 112, reduce 35) on '*'
134: shift/reduce conflict (shift 113, reduce 35) on '/'
134: shift/reduce conflict (shift 115, reduce 35) on '['
state 134
	exp : exp . '+' exp  (27)
	exp : exp . '>' exp  (28)
	exp : exp . AND exp  (29)
	exp : exp . '=' exp  (33)
	exp : exp . '[' exp ']'  (34)
	exp : exp . ob exp  (35)
	exp : exp ob exp .  (35)

	EQ  shift 101
	LEQ  shift 102
	GEQ  shift 103
	NEQ  shift 104
	AND  shift 105
	OR  shift 106
	'='  shift 107
	'>'  shift 108
	'<'  shift 109
	'+'  shift 110
	'-'  shift 111
	'*'  shift 112
	'/'  shift 113
	'['  shift 115
	':'  reduce 35
	';'  reduce 35
	')'  reduce 35
	']'  reduce 35

	ob  goto 116


state 135
	lcmdloop : BREAK .  (79)

	.  reduce 79


136: shift/reduce conflict (shift 59, reduce 68) on ID
136: shift/reduce conflict (shift 60, reduce 68) on IF
136: shift/reduce conflict (shift 61, reduce 68) on WHILE
136: shift/reduce conflict (shift 62, reduce 68) on ESCREVA
136: shift/reduce conflict (shift 63, reduce 68) on LEIA
136: shift/reduce conflict (shift 135, reduce 68) on BREAK
136: reduce/reduce conflict (reduce 68, reduce 80) on ENDWHILE
136: shift/reduce conflict (shift 64, reduce 68) on FOR
136: reduce/reduce conflict (reduce 68, reduce 80) on ENDFOR
state 136
	lcmdloop : cmd . lcmdloop  (78)
	cmd : .  (68)
	lcmdloop : .  (80)

	ID  shift 59
	IF  shift 60
	WHILE  shift 61
	ESCREVA  shift 62
	LEIA  shift 63
	BREAK  shift 135
	FOR  shift 64
	ENDWHILE  reduce 68
	ENDFOR  reduce 68

	cmd  goto 136
	atrib  goto 68
	escrita  goto 69
	leia  goto 70
	if  goto 71
	while  goto 72
	for  goto 73
	lcmdloop  goto 148


state 137
	while : WHILE exp ':' lcmdloop . endwhile  (81)

	ENDWHILE  shift 149
	.  error

	endwhile  goto 150


state 138
	exp : exp . '+' exp  (27)
	exp : exp . '>' exp  (28)
	exp : exp . AND exp  (29)
	exp : exp . '=' exp  (33)
	exp : exp . '[' exp ']'  (34)
	exp : exp . ob exp  (35)
	contescrita : ',' exp .  (71)

	EQ  shift 101
	LEQ  shift 102
	GEQ  shift 103
	NEQ  shift 104
	AND  shift 105
	OR  shift 106
	'='  shift 107
	'>'  shift 108
	'<'  shift 109
	'+'  shift 110
	'-'  shift 111
	'*'  shift 112
	'/'  shift 113
	'['  shift 115
	';'  reduce 71

	ob  goto 116


state 139
	escrita : ESCREVA LIT contescrita ';' .  (70)

	.  reduce 70


state 140
	exp : exp . '+' exp  (27)
	exp : exp . '>' exp  (28)
	exp : exp . AND exp  (29)
	exp : exp . '=' exp  (33)
	exp : exp . '[' exp ']'  (34)
	exp : exp . ob exp  (35)
	for : FOR ID '=' exp . ';' exp ';' exp ':' lcmdloop endfor  (83)

	EQ  shift 101
	LEQ  shift 102
	GEQ  shift 103
	NEQ  shift 104
	AND  shift 105
	OR  shift 106
	'='  shift 107
	'>'  shift 108
	'<'  shift 109
	'+'  shift 110
	'-'  shift 111
	'*'  shift 112
	'/'  shift 113
	';'  shift 151
	'['  shift 115
	.  error

	ob  goto 116


state 141
	return : RETURN exp . ';'  (26)
	exp : exp . '+' exp  (27)
	exp : exp . '>' exp  (28)
	exp : exp . AND exp  (29)
	exp : exp . '=' exp  (33)
	exp : exp . '[' exp ']'  (34)
	exp : exp . ob exp  (35)

	EQ  shift 101
	LEQ  shift 102
	GEQ  shift 103
	NEQ  shift 104
	AND  shift 105
	OR  shift 106
	'='  shift 107
	'>'  shift 108
	'<'  shift 109
	'+'  shift 110
	'-'  shift 111
	'*'  shift 112
	'/'  shift 113
	';'  shift 152
	'['  shift 115
	.  error

	ob  goto 116


state 142
	metnormal : tipo ID '(' lparam ')' latri '{' corpomet return '}' .  (19)

	.  reduce 19


state 143
	chamaMetodo : ID '.' ID '(' . lparam ')'  (85)
	lparam : .  (22)

	ID  shift 12
	INT  shift 13
	DOUBLE  shift 14
	STRING  shift 15
	BOOLEAN  shift 16
	')'  reduce 22

	tipo  goto 40
	lparam  goto 153
	param  goto 42


state 144
	exp : NEW ID '(' lparam . ')'  (45)

	')'  shift 154
	.  error


state 145
	else : ELSE . ':' lcmd  (75)

	':'  shift 155
	.  error


state 146
	if : IF exp ':' lcmd else . endif  (74)

	ENDIF  shift 156
	.  error

	endif  goto 157


state 147
	exp : exp '[' exp ']' .  (34)

	.  reduce 34


state 148
	lcmdloop : cmd lcmdloop .  (78)

	.  reduce 78


state 149
	endwhile : ENDWHILE .  (82)

	.  reduce 82


state 150
	while : WHILE exp ':' lcmdloop endwhile .  (81)

	.  reduce 81


state 151
	for : FOR ID '=' exp ';' . exp ';' exp ':' lcmdloop endfor  (83)

	ID  shift 77
	NUM  shift 78
	LIT  shift 79
	TRUE  shift 80
	FALSE  shift 81
	'('  shift 82
	NUMDOUBLE  shift 83
	NEW  shift 84
	.  error

	exp  goto 158
	chamaMetodo  goto 86


state 152
	return : RETURN exp ';' .  (26)

	.  reduce 26


state 153
	chamaMetodo : ID '.' ID '(' lparam . ')'  (85)

	')'  shift 159
	.  error


state 154
	exp : NEW ID '(' lparam ')' .  (45)

	.  reduce 45


155: shift/reduce conflict (shift 59, reduce 68) on ID
155: shift/reduce conflict (shift 60, reduce 68) on IF
155: shift/reduce conflict (shift 61, reduce 68) on WHILE
155: shift/reduce conflict (shift 62, reduce 68) on ESCREVA
155: shift/reduce conflict (shift 63, reduce 68) on LEIA
155: reduce/reduce conflict (reduce 61, reduce 68) on ENDIF
155: shift/reduce conflict (shift 64, reduce 68) on FOR
state 155
	else : ELSE ':' . lcmd  (75)
	lcmd : .  (61)
	cmd : .  (68)

	ID  shift 59
	IF  shift 60
	WHILE  shift 61
	ESCREVA  shift 62
	LEIA  shift 63
	FOR  shift 64
	ENDIF  reduce 61

	lcmd  goto 160
	cmd  goto 67
	atrib  goto 68
	escrita  goto 69
	leia  goto 70
	if  goto 71
	while  goto 72
	for  goto 73


state 156
	endif : ENDIF .  (77)

	.  reduce 77


state 157
	if : IF exp ':' lcmd else endif .  (74)

	.  reduce 74


state 158
	exp : exp . '+' exp  (27)
	exp : exp . '>' exp  (28)
	exp : exp . AND exp  (29)
	exp : exp . '=' exp  (33)
	exp : exp . '[' exp ']'  (34)
	exp : exp . ob exp  (35)
	for : FOR ID '=' exp ';' exp . ';' exp ':' lcmdloop endfor  (83)

	EQ  shift 101
	LEQ  shift 102
	GEQ  shift 103
	NEQ  shift 104
	AND  shift 105
	OR  shift 106
	'='  shift 107
	'>'  shift 108
	'<'  shift 109
	'+'  shift 110
	'-'  shift 111
	'*'  shift 112
	'/'  shift 113
	';'  shift 161
	'['  shift 115
	.  error

	ob  goto 116


state 159
	chamaMetodo : ID '.' ID '(' lparam ')' .  (85)

	.  reduce 85


state 160
	else : ELSE ':' lcmd .  (75)

	.  reduce 75


state 161
	for : FOR ID '=' exp ';' exp ';' . exp ':' lcmdloop endfor  (83)

	ID  shift 77
	NUM  shift 78
	LIT  shift 79
	TRUE  shift 80
	FALSE  shift 81
	'('  shift 82
	NUMDOUBLE  shift 83
	NEW  shift 84
	.  error

	exp  goto 162
	chamaMetodo  goto 86


state 162
	exp : exp . '+' exp  (27)
	exp : exp . '>' exp  (28)
	exp : exp . AND exp  (29)
	exp : exp . '=' exp  (33)
	exp : exp . '[' exp ']'  (34)
	exp : exp . ob exp  (35)
	for : FOR ID '=' exp ';' exp ';' exp . ':' lcmdloop endfor  (83)

	EQ  shift 101
	LEQ  shift 102
	GEQ  shift 103
	NEQ  shift 104
	AND  shift 105
	OR  shift 106
	'='  shift 107
	'>'  shift 108
	'<'  shift 109
	'+'  shift 110
	'-'  shift 111
	'*'  shift 112
	'/'  shift 113
	':'  shift 163
	'['  shift 115
	.  error

	ob  goto 116


163: shift/reduce conflict (shift 59, reduce 68) on ID
163: shift/reduce conflict (shift 60, reduce 68) on IF
163: shift/reduce conflict (shift 61, reduce 68) on WHILE
163: shift/reduce conflict (shift 62, reduce 68) on ESCREVA
163: shift/reduce conflict (shift 63, reduce 68) on LEIA
163: shift/reduce conflict (shift 135, reduce 68) on BREAK
163: shift/reduce conflict (shift 64, reduce 68) on FOR
163: reduce/reduce conflict (reduce 68, reduce 80) on ENDFOR
state 163
	for : FOR ID '=' exp ';' exp ';' exp ':' . lcmdloop endfor  (83)
	cmd : .  (68)
	lcmdloop : .  (80)

	ID  shift 59
	IF  shift 60
	WHILE  shift 61
	ESCREVA  shift 62
	LEIA  shift 63
	BREAK  shift 135
	FOR  shift 64
	ENDFOR  reduce 68

	cmd  goto 136
	atrib  goto 68
	escrita  goto 69
	leia  goto 70
	if  goto 71
	while  goto 72
	for  goto 73
	lcmdloop  goto 164


state 164
	for : FOR ID '=' exp ';' exp ';' exp ':' lcmdloop . endfor  (83)

	ENDFOR  shift 165
	.  error

	endfor  goto 166


state 165
	endfor : ENDFOR .  (84)

	.  reduce 84


state 166
	for : FOR ID '=' exp ';' exp ';' exp ':' lcmdloop endfor .  (83)

	.  reduce 83


Rules never reduced:
	metvoid : VOID ID '(' lparam ')' latri '{' corpomet '}'  (20)
	exp : '(' exp ')'  (40)
	exp : NUM  (41)
	exp : ID  (46)
	ob : '+'  (47)
	ob : '>'  (51)
	ob : AND  (53)
	lcmdloop :  (80)


State 0 contains 1 reduce/reduce conflict.
State 55 contains 6 shift/reduce conflicts, 1 reduce/reduce conflict.
State 57 contains 6 shift/reduce conflicts, 1 reduce/reduce conflict.
State 67 contains 6 shift/reduce conflicts, 4 reduce/reduce conflicts.
State 75 contains 6 shift/reduce conflicts, 1 reduce/reduce conflict.
State 77 contains 18 reduce/reduce conflicts.
State 78 contains 18 reduce/reduce conflicts.
State 105 contains 8 shift/reduce conflicts.
State 108 contains 8 shift/reduce conflicts.
State 110 contains 8 shift/reduce conflicts.
State 114 contains 6 shift/reduce conflicts, 2 reduce/reduce conflicts.
State 117 contains 7 shift/reduce conflicts, 1 reduce/reduce conflict.
State 126 contains 18 reduce/reduce conflicts.
State 128 contains 1 shift/reduce conflict.
State 129 contains 1 shift/reduce conflict.
State 130 contains 1 shift/reduce conflict.
State 131 contains 1 shift/reduce conflict.
State 134 contains 14 shift/reduce conflicts.
State 136 contains 7 shift/reduce conflicts, 2 reduce/reduce conflicts.
State 155 contains 6 shift/reduce conflicts, 1 reduce/reduce conflict.
State 163 contains 7 shift/reduce conflicts, 1 reduce/reduce conflict.


60 terminals, 37 nonterminals
91 grammar rules, 167 states
